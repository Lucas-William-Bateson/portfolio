---
type Link = { label: string; url: string };
const {
  name = 'Your Name',
  role = 'Your Role',
  tagline = '',
  location = undefined as string | undefined,
  links = [] as Link[],
  about = [] as string[],
} = Astro.props as {
  name?: string;
  role?: string;
  tagline?: string;
  location?: string;
  links?: Link[];
  about?: string[];
};

const email = links.find(l => l.url.startsWith('mailto:'))?.url.replace('mailto:', '') ?? undefined;

function icon(name: string) {
  switch (name.toLowerCase()) {
    case 'github':
      return `<svg viewBox='0 0 24 24' width='18' height='18' fill='currentColor' aria-hidden='true'><path d='M12 .5A11.5 11.5 0 0 0 .5 12.3c0 5.24 3.42 9.68 8.17 11.25.6.11.83-.26.83-.58 0-.28-.01-1.03-.02-2.02-3.33.73-4.03-1.63-4.03-1.63-.54-1.37-1.33-1.73-1.33-1.73-1.09-.76.08-.74.08-.74 1.2.09 1.83 1.25 1.83 1.25 1.07 1.86 2.8 1.32 3.49 1.01.11-.8.42-1.32.76-1.63-2.66-.31-5.46-1.37-5.46-6.1 0-1.35.47-2.45 1.24-3.31-.12-.3-.54-1.57.12-3.27 0 0 1.01-.33 3.3 1.26a11.4 11.4 0 0 1 6 0c2.28-1.59 3.29-1.26 3.29-1.26.66 1.7.24 2.97.12 3.27.77.86 1.23 1.96 1.23 3.31 0 4.74-2.81 5.79-5.49 6.1.43.38.82 1.12.82 2.27 0 1.64-.02 2.96-.02 3.36 0 .32.22.69.83.58A11.52 11.52 0 0 0 23.5 12.3 11.5 11.5 0 0 0 12 .5Z'/></svg>`;
    case 'linkedin':
      return `<svg viewBox='0 0 24 24' width='18' height='18' fill='currentColor' aria-hidden='true'><path d='M4.98 3.5C4.98 4.88 3.88 6 2.5 6S0 4.88 0 3.5 1.12 1 2.5 1s2.48 1.12 2.48 2.5ZM0 8.98h5V24H0V8.98Zm7.55 0h4.79v2.04h.07c.67-1.27 2.31-2.6 4.76-2.6 5.09 0 6.03 3.35 6.03 7.71V24h-4.99v-6.66c0-1.59-.03-3.64-2.22-3.64-2.22 0-2.56 1.73-2.56 3.52V24H7.55V8.98Z'/></svg>`;
    case 'twitter':
      return `<svg viewBox='0 0 24 24' width='18' height='18' fill='currentColor' aria-hidden='true'><path d='M23.44 4.84c-.81.36-1.69.6-2.61.71a4.52 4.52 0 0 0 1.98-2.5 9.18 9.18 0 0 1-2.88 1.1A4.5 4.5 0 0 0 11.5 7.4a12.8 12.8 0 0 1-9.3-4.72 4.48 4.48 0 0 0 1.4 6.01c-.7-.02-1.36-.2-1.93-.5v.05a4.5 4.5 0 0 0 3.61 4.41c-.33.09-.68.13-1.04.13-.25 0-.5-.02-.73-.07a4.5 4.5 0 0 0 4.2 3.12A9.03 9.03 0 0 1 0 19.54a12.76 12.76 0 0 0 6.91 2.03c8.3 0 12.85-6.88 12.85-12.84l-.01-.58a9.11 9.11 0 0 0 2.23-2.32Z'/></svg>`;
    case 'email':
      return `<svg viewBox='0 0 24 24' width='18' height='18' fill='currentColor' aria-hidden='true'><path d='M20 4H4a2 2 0 0 0-2 2v.2l10 6 10-6V6a2 2 0 0 0-2-2Zm0 4.4-8 4.8L4 8.4V18a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.4Z'/></svg>`;
    default:
      return '';
  }
}
---
<aside class="sticky top-10 self-start" aria-label="Profile sidebar">
  <div class="grid gap-6 ml-0 md:ml-[60px]">
    <div class="text-left">
      <img src="/avatar.jpeg" alt={name} class="mb-4 w-48 h-48 object-cover rounded-md bg-[#1a1a1a] border border-border" />
      <div class="text-2xl font-bold leading-tight">{name}</div>
      <div class="text-muted">{role}</div>
      {tagline ? (<div class="text-muted text-sm mt-1">{tagline}</div>) : null}
      <div class="mt-3 grid gap-1.5 text-sm text-muted">
        {location ? (
          <div class="flex items-center gap-2">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M12 2a7 7 0 0 0-7 7c0 5.25 7 13 7 13s7-7.75 7-13a7 7 0 0 0-7-7Zm0 9.5a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5Z"/></svg>
            <span>{location}</span>
          </div>
        ) : null}
        {email ? (
          <div class="flex items-center gap-2">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M20 4H4a2 2 0 0 0-2 2v.2l10 6 10-6V6a2 2 0 0 0-2-2Zm0 4.4-8 4.8L4 8.4V18a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.4Z"/></svg>
            <a class="link-raw" href={`mailto:${email}`}>{email}</a>
          </div>
        ) : null}
      </div>
      {links.length ? (
        <div class="mt-3 flex items-center gap-3">
          {links.map(l => {
            const key = l.label.toLowerCase();
            const iconSvg = icon(key.includes('git') ? 'github' : key.includes('linked') ? 'linkedin' : key.includes('tweet') || key.includes('x') || key.includes('twitter') ? 'twitter' : key.includes('mail') ? 'email' : '');
            return (
              <a href={l.url} class="inline-flex items-center justify-center w-8 h-8" target={l.url.startsWith('http') ? '_blank' : undefined} rel="noreferrer noopener" aria-label={l.label} set:html={iconSvg}></a>
            );
          })}
        </div>
      ) : null}
    </div>

    <div class="h-sep"></div>

    <div class="text-left">
      <div class="font-semibold text-white mb-2">About</div>
      <div class="text-muted text-sm">
        {about.length ? about[0] : 'No bio provided yet.'}
      </div>
    </div>
  </div>
</aside>
